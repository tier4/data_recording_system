<launch>
  <arg name="vehicle_id" default="default"/>
  <arg name="live_sensor" default="True"/>
  <arg name="publish_pointcloud" default="False"/>
  <arg name="has_front4d" default="False"/>
  <arg name="publish_tf" default="True"/>

  <let name="param_root_dir" value="$(find-pkg-share individual_params)/config/$(var vehicle_id)"/>

  <!-- trigger -->
  <group if="$(var live_sensor)">
    <node pkg="sensor_trigger" exec="sensor_trigger_exe" name="sensor_trigger">
      <param from="$(var param_root_dir)/ecu0_trigger.param.yaml"/>
    </node>
  </group>

  <!-- camera0 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="0"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_tf" value="$(var publish_tf)"/>
  </include>

  <!-- camera1 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="1"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_tf" value="$(var publish_tf)"/>
  </include>

  <!-- camera2 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="2"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_tf" value="$(var publish_tf)"/>
  </include>

  <!-- camera3 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="3"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_tf" value="$(var publish_tf)"/>
  </include>

  <!-- front 4D LiDAR -->
  <group if="$(var has_front4d)">
    <include file="$(find-pkg-share drs_launch)/launch/component/drs_aeva.launch.xml">
      <arg name="lidar_position" value="front4d"/>
      <arg name="lidar_model" value="Aeries2"/>
      <arg name="live_sensor" value="$(var live_sensor)"/>
    </include>
  </group>

  <!-- front LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="front"/>
    <arg name="lidar_model" value="Falcon"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.2.201"/>
    <arg name="host_ip" value="192.168.2.1"/>
    <arg name="data_port" value="2368"/>
  </include>

  <!-- right LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="right"/>
    <arg name="lidar_model" value="RobinW"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.3.203"/>
    <arg name="host_ip" value="192.168.3.1"/>
  </include>

  <!-- CAN -->
  <!-- vehicle interface -->
  <group if="$(var live_sensor)">
    <include file="$(find-pkg-share drs_launch)/launch/component/can_interface.launch.xml">
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
    </include>
  </group>

  <!-- IMU -->
  <!-- <include file="$(find-pkg-share drs_launch)/launch/component/imu.launch.xml"> -->
  <!--   <arg name="launch_driver" value="$(var live_sensor)"/> -->
  <!-- </include> -->

  <!-- TF for each LiDARs and base_link to drs_base_link -->
  <group if="$(var publish_tf)">
    <group> <!-- guard by group not to polute argument dict by multiple calling-->
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_front"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_right"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/base_link_to_drs_base_link.yaml"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
  </group>

  <!-- topic monitor -->
  <group scoped="True">
    <!-- To prevent topic monitor communicate over network, set LOCALHOST_ONLY=1 -->
    <set_env name="ROS_LOCALHOST_ONLY" value="1"/>
    <node pkg="ros_topic_monitor" exec="ros_topic_monitor">
      <remap from="statistics" to="/ecu1/statistics"/>
      <param name="topic_list" value="/opt/drs/record_topics_ecu0.yaml"/>
      <param name="update_interval" value="10000"/>
    </node>
  </group>
</launch>
