<launch>
  <arg name="camera_id"/>
  <arg name="param_root_dir"/>
  <arg name="live_sensor"/>

  <group>
    <let name="camera_name" value="camera$(var camera_id)"/>
    <let name="camera_param_dir" value="$(var param_root_dir)/$(var camera_name)"/>
    <push-ros-namespace namespace="sensing/camera/$(var camera_name)"/>

    <group if="$(var live_sensor)"> <!-- Boot sensor drivers for online mode -->
      <!-- Create composable container -->
      <let name="root_container_name" value="$(var camera_name)_container"/>
      <node_container pkg="rclcpp_components" exec="component_container" name="$(var root_container_name)"
                      namespace="/"/>
      <!-- Load v4l2 into the container -->
      <include file="$(find-pkg-share drs_launch)/launch/component/v4l2_camera.launch.xml">
        <arg name="container_name" value="/$(var root_container_name)"/>
        <arg name="camera_frame_id" value="$(var camera_name)/camera_optical_link"/>
        <arg name="v4l2_camera_param_path" value="$(var camera_param_dir)/v4l2_camera.param.yaml"/>
        <arg name="camera_info_url" value="file://$(var camera_param_dir)/camera_info.yaml"/>
      </include>
      <!-- Load gpuimg_proc into the container -->
      <include file="$(find-pkg-share drs_launch)/launch/component/accelerated_image_processor.launch.xml">
        <arg name="container_name" value="/$(var root_container_name)"/>
        <arg name="accelerated_image_processor_param_path" value="$(var camera_param_dir)/accelerated_image_processor.param.yaml"/>
      </include>

      <!-- <!-\- Launch TF static publisher for camera and LiDAR -\-> -->
      <!-- <include file="$(find-pkg-share drs_launch)/launch/component/lidar_camera_tf_publisher.launch.py"> -->
      <!--   <arg name="tf_file_path" value="$(var camera_param_dir)/lidar_to_camera.json"/> -->
      <!-- </include> -->
      <!-- <!-\- Execute readout setter -\-> -->
      <!-- <node pkg="c2_readout_delay_setter" exec="c2_readout_delay_setter" name="readout_setter_$(var camera_id)"> -->
      <!--   <param from="$(var camera_param_dir)/readout_delay.param.yaml"/> -->
      <!--   <param name="target_v4l2_node" value="v4l2_camera"/> -->
      <!-- </node> -->
    </group>

    <group unless="$(var live_sensor)"> <!-- Boot decompressor for offline mode -->
      <!-- XXX: The following node only accepts RELIABLE QoS as subscribed topic -->
      <!-- User may need to overrride QoS when playing rosbag -->
      <node pkg="image_transport" exec="republish" args="compressed">
        <remap from="in/compressed" to="image_raw/compressed"/>
        <remap from="out" to="image_raw"/>
      </node>
    </group>
  </group>


</launch>
