<launch>
  <!-- Entry point of DRS launcher -->
  <arg name="vehicle_id" default="default"/>
  <arg name="live_sensor" default="False"
       description="If true, sensor drivers will be executed (for actual recording operation)"/>
  <arg name="publish_pointcloud" default="True"
       description="If false, pointcloud decoding will not be performed (for actual recording operation)"/>
  <arg name="has_front4d" default="False"
       description="Should be True when a front-mounted 4D LiDAR is present"/>
  <arg name="publish_tf" default="True"/>

  <let name="param_root_dir" value="$(find-pkg-share individual_params)/config/$(var vehicle_id)"/>

  <!-- front 4D LiDAR -->
  <group if="$(var has_front4d)">
    <include file="$(find-pkg-share drs_launch)/launch/component/drs_aeva.launch.xml">
      <arg name="lidar_position" value="front4d"/>
      <arg name="lidar_model" value="Aeries2"/>
      <arg name="live_sensor" value="$(var live_sensor)"/>
    </include>
  </group>

  <!-- front LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="front"/>
    <arg name="lidar_model" value="Falcon"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.2.201"/>
    <arg name="host_ip" value="192.168.2.1"/>
    <arg name="data_port" value="2368"/>
  </include>

  <!-- right LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="right"/>
    <arg name="lidar_model" value="RobinW"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.3.203"/>
    <arg name="host_ip" value="192.168.3.1"/>
  </include>

  <!-- rear LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="rear"/>
    <arg name="lidar_model" value="Falcon"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.2.202"/>
    <arg name="host_ip" value="192.168.2.2"/>
    <arg name="data_port" value="2369"/>
  </include>

  <!-- left LiDAR -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_seyond.launch.xml">
    <arg name="lidar_position" value="left"/>
    <arg name="lidar_model" value="RobinW"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
    <arg name="publish_pointcloud" value="$(var publish_pointcloud)"/>
    <arg name="sensor_ip" value="192.168.3.204"/>
    <arg name="host_ip" value="192.168.3.2"/>
  </include>


  <!-- camera0 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="0"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera1 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="1"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera2 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="2"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera3 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="3"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera4 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="4"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera5 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="5"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera6 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="6"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <!-- camera7 -->
  <include file="$(find-pkg-share drs_launch)/launch/component/drs_camera.launch.xml">
    <arg name="camera_id" value="7"/>
    <arg name="param_root_dir" value="$(var param_root_dir)"/>
    <arg name="live_sensor" value="$(var live_sensor)"/>
  </include>

  <include file="$(find-pkg-share pointcloud_concatenate)/launch/pointcloud_concatenate.launch.py">
    <arg name="base_frame" value="base_link"/>
    <arg name="use_intra_process" value="true"/>
    <arg name="use_multithread" value="true"/>
    <arg name="use_pointcloud_container" value="false"/>
  </include>

  <group if="$(var publish_tf)">
    <group> <!-- guard by group not to polute argument dict by multiple calling-->
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/base_link_to_drs_base_link.yaml"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_front"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_left"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_right"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/drs_base_link_to_lidars.yaml"/>
        <arg name="target_frame" value="lidar_rear"/>
        <arg name="publish_camera_optical_link" value="False"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera0/camera0_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera1/camera1_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera2/camera2_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera3/camera3_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera4/camera4_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera5/camera5_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera6/camera6_calibration_results.yaml"/>
      </include>
    </group>
    <group>
      <include file="$(find-pkg-share drs_launch)/launch/component/tf_publisher.launch.py">
        <arg name="tf_file_path" value="$(var param_root_dir)/camera7/camera7_calibration_results.yaml"/>
      </include>
    </group>
  </group>

</launch>
