- name: Install nfs-common package to support NFS mount
  ansible.builtin.apt:
    name:
      - nfs-common
    update_cache: true
  become: true

- name: Create mount point
  ansible.builtin.file:
    path: "{{ record_root_directory }}"
    state: directory

- name: Configure auto mount NAS
  ansible.posix.mount:
    src: 192.168.10.100:/volume1/data
    path: "{{ record_root_directory }}"
    fstype: nfs
    opts: v4.1,user,rw,x-systemd.automount,x-systemd.requires=network-online.target
    state: present
    boot: true
  become: true

- name: Get the list of NVMe devices
  ansible.builtin.find:
    paths: /dev
    patterns: "^nvme(\\d+)n(\\d+)"
    use_regex: true
    file_type: any
  register: nvme_devices

- name: Format SSD
  community.general.filesystem:
    fstype: ext4
    dev: "{{ item.path }}"
  with_items: "{{ nvme_devices.files }}"
  become: true

- name: Configure auto mount SSD
  block:
    - name: get SSD UUID from blkid
      ansible.builtin.command: blkid -s UUID -o value "{{ item.path }}"
      register: blkid_outputs
      with_items: "{{ nvme_devices.files | sort(attribute='path') }}"
    - name: Add SSD UUID to fstab and mount it
      ansible.posix.mount:
        src: "UUID={{ blkid_outputs.results[item | int].stdout }}"
        path: "{{ local_storages.prefix + '{}'.format(item + 1) }}"
        fstype: ext4
        opts: defaults
        state: mounted
        boot: true
      with_items: "{{ range(0, local_storages.number_of_storages)|list }}"
    - name: Allow read, write, and execute permission recursively for all users
      ansible.builtin.file:
        path: "{{ local_storages.prefix + '{}'.format(item + 1) }}"
        mode: '0777'
        state: directory
        recurse: yes
      with_items: "{{ range(0, local_storages.number_of_storages)|list }}"
  become: true

- name: Force systemd to reload config
  ansible.builtin.systemd:
    daemon_reload: true
  become: true
